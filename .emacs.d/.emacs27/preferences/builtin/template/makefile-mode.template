
SRCS = \
    template.c \
    $(END)

C_SRCS = $(filter %.c,$(SRCS))
LD = gcc

TARGET = template


# options

# null string
NULLSTRING :=
SPACE := $(NULLSTRING) $(NULLSTRING)
END :=


# compile option flags
CFLAGS_O = -O2
CFLAGS_W = -Wall
CFLAGS_G = -g

CFLAGS = $(CFLAGS_O) $(CFLAGS_W) $(CFLAGS_G)
CPPFLAGS = $(INCLUDE_PATH_FIX)


# linker option flags
LD_FLAGS = -Wl,-Map,$@.map $(LIBRARIES_PATH_FIX)
# include
CRT0_DIR = /usr/lib

INCLUDE_PATH = \
    . \
    $(CRT0_DIR) \
    $(END)

INCLUDE_PATH := $(strip $(INCLUDE_PATH))
INCLUDE_PATH_FIX = $(patsubst %,-I%,$(INCLUDE_PATH))


VPATH = $(subst $(SPACE),:,$(INCLUDE_PATH))

# lib bath
LIBRARIES_PATH = \
    . \
    /usr/lib \
    $(END)

LIBRARIES_PATH := $(strip $(LIBRARIES_PATH))
LIBRARIES_PATH_FIX = $(patsubst %,-L%,$(LIBRARIES_PATH))



# basic rule
C_OBJS = $(patsubst %.c,%.o,$(C_SRCS))


C_DEPS = $(patsubst %.c,%.d,$(C_SRCS))
DEPS_TMP = \
    $(C_DEPS) \
    $(END)
DEPS = $(strip $(DEPS_TMP))


.PHONY: all all-here
all: all-here all-taget
all-here: $(C_OBJS)
all-taget: $(TARGET)


clean :
    rm -rf *~
    rm -rf *.*~
    rm -rf *.d
    rm -rf *.o
    rm -rf *.map
    rm -rf *.all


$(C_OBJS) : %.o: %.c
    $(CC) $(CFLAGS) $(CPPFLAGS) -Wp,-MD,$*.d -c $<

#   $(CC) $(CFLAGS) $(CPPFLAGS) -c $<

$(TARGET) : $(C_OBJS)
    $(LD) -o $@.all $(C_OBJS) $(LD_FLAGS)



ifneq ($(DEPS),)
-include $(DEPS)
endif
